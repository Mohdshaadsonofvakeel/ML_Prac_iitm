{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNS0TZXeAyVbdpTplbW+sWI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":781},"id":"ceff19fd","executionInfo":{"status":"ok","timestamp":1750495948229,"user_tz":-330,"elapsed":177,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"4906f34e-8817-4907-925e-e99cacb165bc"},"source":["import pandas as pd\n","\n","# Read the dataset from the CSV file\n","csv_file_path = '/content/GA_3_dataset.csv'\n","try:\n","    df = pd.read_csv(csv_file_path)\n","    print(f\"Successfully loaded data from {csv_file_path}\")\n","\n","    # Display basic info about the dataset\n","    print(\"Dataset shape:\", df.shape)\n","    print(\"\\nColumn names:\")\n","    print(df.columns.tolist())\n","\n","    # Check data types of all columns\n","    print(\"\\nData types of all columns:\")\n","    print(df.dtypes)\n","\n","    # Specifically check the columns mentioned in the question\n","    columns_to_check = ['Age', 'Gender', 'Location', 'GameGenre', 'PlayTimeHours']\n","    print(\"\\nData types of specified columns:\")\n","    for col in columns_to_check:\n","        if col in df.columns:\n","            print(f\"{col}: {df[col].dtype}\")\n","        else:\n","            print(f\"{col}: Column not found\")\n","\n","    # Show which columns have object datatype\n","    object_columns = df.select_dtypes(include=['object']).columns.tolist()\n","    print(f\"\\nColumns with object datatype: {object_columns}\")\n","\n","    # Display first few rows to understand the data better\n","    print(\"\\nFirst 5 rows of the dataset:\")\n","    display(df.head())\n","\n","except FileNotFoundError:\n","    print(f\"Error: The file '{csv_file_path}' was not found.\")\n","except Exception as e:\n","    print(f\"An error occurred while reading the CSV file: {e}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Successfully loaded data from /content/GA_3_dataset.csv\n","Dataset shape: (10000, 13)\n","\n","Column names:\n","['PlayerID', 'Age', 'Gender', 'Location', 'GameGenre', 'PlayTimeHours', 'InGamePurchases', 'GameDifficulty', 'SessionsPerWeek', 'AvgSessionDurationMinutes', 'PlayerLevel', 'AchievementsUnlocked', 'EngagementLevel']\n","\n","Data types of all columns:\n","PlayerID                       int64\n","Age                          float64\n","Gender                        object\n","Location                      object\n","GameGenre                     object\n","PlayTimeHours                float64\n","InGamePurchases              float64\n","GameDifficulty                object\n","SessionsPerWeek                int64\n","AvgSessionDurationMinutes      int64\n","PlayerLevel                    int64\n","AchievementsUnlocked           int64\n","EngagementLevel               object\n","dtype: object\n","\n","Data types of specified columns:\n","Age: float64\n","Gender: object\n","Location: object\n","GameGenre: object\n","PlayTimeHours: float64\n","\n","Columns with object datatype: ['Gender', 'Location', 'GameGenre', 'GameDifficulty', 'EngagementLevel']\n","\n","First 5 rows of the dataset:\n"]},{"output_type":"display_data","data":{"text/plain":["   PlayerID   Age  Gender Location   GameGenre  PlayTimeHours  \\\n","0     35900  37.0    Male    Other    Strategy      23.929404   \n","1     27085  25.0    Male      NaN      Action      22.755168   \n","2     39595  24.0  Female   Europe  Simulation      19.505292   \n","3     37440  26.0  Female   Europe         RPG      11.009645   \n","4     22882  17.0  Female      USA         RPG       0.581039   \n","\n","   InGamePurchases GameDifficulty  SessionsPerWeek  AvgSessionDurationMinutes  \\\n","0              NaN           Hard                3                        124   \n","1              1.0           Easy               14                         84   \n","2              0.0           Hard                3                        172   \n","3              NaN            NaN                3                         83   \n","4              1.0         Medium                5                        163   \n","\n","   PlayerLevel  AchievementsUnlocked EngagementLevel  \n","0           99                    18          Medium  \n","1           84                    12          Medium  \n","2            9                    18          Medium  \n","3           36                    43             Low  \n","4            9                    24          Medium  "],"text/html":["\n","  <div id=\"df-94f328f0-557b-4df6-beb9-c337a1d4ca3d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PlayerID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Location</th>\n","      <th>GameGenre</th>\n","      <th>PlayTimeHours</th>\n","      <th>InGamePurchases</th>\n","      <th>GameDifficulty</th>\n","      <th>SessionsPerWeek</th>\n","      <th>AvgSessionDurationMinutes</th>\n","      <th>PlayerLevel</th>\n","      <th>AchievementsUnlocked</th>\n","      <th>EngagementLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35900</td>\n","      <td>37.0</td>\n","      <td>Male</td>\n","      <td>Other</td>\n","      <td>Strategy</td>\n","      <td>23.929404</td>\n","      <td>NaN</td>\n","      <td>Hard</td>\n","      <td>3</td>\n","      <td>124</td>\n","      <td>99</td>\n","      <td>18</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27085</td>\n","      <td>25.0</td>\n","      <td>Male</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>22.755168</td>\n","      <td>1.0</td>\n","      <td>Easy</td>\n","      <td>14</td>\n","      <td>84</td>\n","      <td>84</td>\n","      <td>12</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39595</td>\n","      <td>24.0</td>\n","      <td>Female</td>\n","      <td>Europe</td>\n","      <td>Simulation</td>\n","      <td>19.505292</td>\n","      <td>0.0</td>\n","      <td>Hard</td>\n","      <td>3</td>\n","      <td>172</td>\n","      <td>9</td>\n","      <td>18</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>37440</td>\n","      <td>26.0</td>\n","      <td>Female</td>\n","      <td>Europe</td>\n","      <td>RPG</td>\n","      <td>11.009645</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>83</td>\n","      <td>36</td>\n","      <td>43</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>22882</td>\n","      <td>17.0</td>\n","      <td>Female</td>\n","      <td>USA</td>\n","      <td>RPG</td>\n","      <td>0.581039</td>\n","      <td>1.0</td>\n","      <td>Medium</td>\n","      <td>5</td>\n","      <td>163</td>\n","      <td>9</td>\n","      <td>24</td>\n","      <td>Medium</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94f328f0-557b-4df6-beb9-c337a1d4ca3d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94f328f0-557b-4df6-beb9-c337a1d4ca3d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94f328f0-557b-4df6-beb9-c337a1d4ca3d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-38fcec23-fffe-492d-a5d7-2ed71bed715d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-38fcec23-fffe-492d-a5d7-2ed71bed715d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-38fcec23-fffe-492d-a5d7-2ed71bed715d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    print(f\\\"An error occurred while reading the CSV file: {e}\\\")\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"PlayerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7212,\n        \"min\": 22882,\n        \"max\": 39595,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          27085,\n          22882,\n          39595\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.19027120489902,\n        \"min\": 17.0,\n        \"max\": 37.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          25.0,\n          17.0,\n          24.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Other\",\n          \"Europe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GameGenre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Action\",\n          \"RPG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PlayTimeHours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.778261622273094,\n        \"min\": 0.5810394039971412,\n        \"max\": 23.92940353535123,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          22.75516807245566,\n          0.5810394039971412\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"InGamePurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5773502691896258,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GameDifficulty\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hard\",\n          \"Easy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SessionsPerWeek\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 3,\n        \"max\": 14,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgSessionDurationMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42,\n        \"min\": 83,\n        \"max\": 172,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          84,\n          163\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PlayerLevel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 42,\n        \"min\": 9,\n        \"max\": 99,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          84,\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AchievementsUnlocked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 12,\n        \"max\": 43,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EngagementLevel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Low\",\n          \"Medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":521},"id":"a3b61973","executionInfo":{"status":"ok","timestamp":1750496065013,"user_tz":-330,"elapsed":135,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"de4f31ba-9a7d-4bff-bb8d-42eff93f9f3f"},"source":["# First, let's examine the InGamePurchases column to understand its values\n","print(\"InGamePurchases column info:\")\n","print(\"Data type:\", df['InGamePurchases'].dtype)\n","print(\"Unique values:\", df['InGamePurchases'].unique())\n","print(\"Value counts:\")\n","print(df['InGamePurchases'].value_counts())\n","\n","# Filter for Males from Europe who have made InGamePurchases\n","# Assuming InGamePurchases > 0 means they made purchases\n","males_europe_with_purchases = df[\n","    (df['Gender'] == 'Male') &\n","    (df['Location'] == 'Europe') &\n","    (df['InGamePurchases'] > 0)\n","]\n","\n","print(f\"\\nNumber of Males from Europe who made InGamePurchases: {len(males_europe_with_purchases)}\")\n","\n","# Let's also show some details about these players\n","print(f\"\\nBreakdown of Males from Europe:\")\n","males_europe = df[(df['Gender'] == 'Male') & (df['Location'] == 'Europe')]\n","print(f\"Total Males from Europe: {len(males_europe)}\")\n","print(f\"Males from Europe with purchases (>0): {len(males_europe_with_purchases)}\")\n","print(f\"Males from Europe without purchases (0): {len(males_europe) - len(males_europe_with_purchases)}\")\n","\n","# Show first few rows of the filtered data\n","print(f\"\\nFirst 5 Males from Europe who made purchases:\")\n","display(males_europe_with_purchases.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["InGamePurchases column info:\n","Data type: float64\n","Unique values: [nan  1.  0.]\n","Value counts:\n","InGamePurchases\n","0.0    7244\n","1.0    1863\n","Name: count, dtype: int64\n","\n","Number of Males from Europe who made InGamePurchases: 299\n","\n","Breakdown of Males from Europe:\n","Total Males from Europe: 1687\n","Males from Europe with purchases (>0): 299\n","Males from Europe without purchases (0): 1388\n","\n","First 5 Males from Europe who made purchases:\n"]},{"output_type":"display_data","data":{"text/plain":["    PlayerID   Age Gender Location GameGenre  PlayTimeHours  InGamePurchases  \\\n","30     22488  26.0   Male   Europe    Action      23.347913              1.0   \n","39     38439  48.0   Male   Europe    Sports       8.759941              1.0   \n","52     11149  41.0   Male   Europe    Sports       8.683196              1.0   \n","63     45546  18.0   Male   Europe    Sports      17.287868              1.0   \n","68      9158  46.0   Male   Europe    Sports      12.306317              1.0   \n","\n","   GameDifficulty  SessionsPerWeek  AvgSessionDurationMinutes  PlayerLevel  \\\n","30         Medium               18                         33           48   \n","39         Medium                6                         40           74   \n","52           Hard                8                        125           31   \n","63           Easy                7                        119           87   \n","68         Medium               11                        179           91   \n","\n","    AchievementsUnlocked EngagementLevel  \n","30                    45          Medium  \n","39                    47          Medium  \n","52                    23          Medium  \n","63                    41          Medium  \n","68                     4            High  "],"text/html":["\n","  <div id=\"df-fc734400-7e17-41e1-9054-d5ff85fbc7c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PlayerID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Location</th>\n","      <th>GameGenre</th>\n","      <th>PlayTimeHours</th>\n","      <th>InGamePurchases</th>\n","      <th>GameDifficulty</th>\n","      <th>SessionsPerWeek</th>\n","      <th>AvgSessionDurationMinutes</th>\n","      <th>PlayerLevel</th>\n","      <th>AchievementsUnlocked</th>\n","      <th>EngagementLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>30</th>\n","      <td>22488</td>\n","      <td>26.0</td>\n","      <td>Male</td>\n","      <td>Europe</td>\n","      <td>Action</td>\n","      <td>23.347913</td>\n","      <td>1.0</td>\n","      <td>Medium</td>\n","      <td>18</td>\n","      <td>33</td>\n","      <td>48</td>\n","      <td>45</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>38439</td>\n","      <td>48.0</td>\n","      <td>Male</td>\n","      <td>Europe</td>\n","      <td>Sports</td>\n","      <td>8.759941</td>\n","      <td>1.0</td>\n","      <td>Medium</td>\n","      <td>6</td>\n","      <td>40</td>\n","      <td>74</td>\n","      <td>47</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>11149</td>\n","      <td>41.0</td>\n","      <td>Male</td>\n","      <td>Europe</td>\n","      <td>Sports</td>\n","      <td>8.683196</td>\n","      <td>1.0</td>\n","      <td>Hard</td>\n","      <td>8</td>\n","      <td>125</td>\n","      <td>31</td>\n","      <td>23</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>45546</td>\n","      <td>18.0</td>\n","      <td>Male</td>\n","      <td>Europe</td>\n","      <td>Sports</td>\n","      <td>17.287868</td>\n","      <td>1.0</td>\n","      <td>Easy</td>\n","      <td>7</td>\n","      <td>119</td>\n","      <td>87</td>\n","      <td>41</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>9158</td>\n","      <td>46.0</td>\n","      <td>Male</td>\n","      <td>Europe</td>\n","      <td>Sports</td>\n","      <td>12.306317</td>\n","      <td>1.0</td>\n","      <td>Medium</td>\n","      <td>11</td>\n","      <td>179</td>\n","      <td>91</td>\n","      <td>4</td>\n","      <td>High</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc734400-7e17-41e1-9054-d5ff85fbc7c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fc734400-7e17-41e1-9054-d5ff85fbc7c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fc734400-7e17-41e1-9054-d5ff85fbc7c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4d06c10b-55a2-467d-8aae-6a7ff2cd79fb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d06c10b-55a2-467d-8aae-6a7ff2cd79fb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4d06c10b-55a2-467d-8aae-6a7ff2cd79fb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(males_europe_with_purchases\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"PlayerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16211,\n        \"min\": 9158,\n        \"max\": 45546,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          38439,\n          9158,\n          11149\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.160547101089682,\n        \"min\": 18.0,\n        \"max\": 48.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          48.0,\n          46.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Europe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GameGenre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Sports\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PlayTimeHours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.260172770690701,\n        \"min\": 8.68319573294876,\n        \"max\": 23.347913004047232,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.7599414015914\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"InGamePurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GameDifficulty\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SessionsPerWeek\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 6,\n        \"max\": 18,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgSessionDurationMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61,\n        \"min\": 33,\n        \"max\": 179,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PlayerLevel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 31,\n        \"max\": 91,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          74\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AchievementsUnlocked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 4,\n        \"max\": 47,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EngagementLevel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"High\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"4044c4bd","executionInfo":{"status":"ok","timestamp":1750496178069,"user_tz":-330,"elapsed":157,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"f55f9fcd-4a30-462a-d584-060477b09797"},"source":["# Filter for players under the age of 18 with strictly greater than 10 PlayTimeHours\n","players_under_18_high_playtime = df[\n","    (df['Age'] < 18) &\n","    (df['PlayTimeHours'] > 10)\n","]\n","\n","# Get the number of such players\n","num_players_under_18_high_playtime = len(players_under_18_high_playtime)\n","\n","print(f\"Number of players under Age 18 with strictly greater than 10 PlayTimeHours: {num_players_under_18_high_playtime}\")\n","\n","# Optionally, display the first few rows of the filtered data\n","print(\"\\nFirst 5 players under Age 18 with strictly greater than 10 PlayTimeHours:\")\n","display(players_under_18_high_playtime.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of players under Age 18 with strictly greater than 10 PlayTimeHours: 453\n","\n","First 5 players under Age 18 with strictly greater than 10 PlayTimeHours:\n"]},{"output_type":"display_data","data":{"text/plain":["     PlayerID   Age  Gender Location GameGenre  PlayTimeHours  \\\n","25      24898  15.0    Male     Asia    Sports      12.376600   \n","64      34210  16.0  Female   Europe       RPG      12.106891   \n","72      22234  17.0  Female   Europe    Sports      18.473853   \n","133     19489  17.0    Male      NaN  Strategy      23.178396   \n","154     43046  16.0  Female      USA    Sports      13.464307   \n","\n","     InGamePurchases GameDifficulty  SessionsPerWeek  \\\n","25               0.0           Easy                2   \n","64               0.0           Hard                1   \n","72               0.0           Easy               12   \n","133              0.0            NaN                4   \n","154              0.0           Hard                3   \n","\n","     AvgSessionDurationMinutes  PlayerLevel  AchievementsUnlocked  \\\n","25                         100           49                    43   \n","64                          85           78                     4   \n","72                          11           50                    25   \n","133                        136           36                    39   \n","154                         26           20                    12   \n","\n","    EngagementLevel  \n","25             High  \n","64              Low  \n","72              Low  \n","133          Medium  \n","154             Low  "],"text/html":["\n","  <div id=\"df-dec66a7b-7965-4c84-8ab2-7eaa86beea99\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PlayerID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Location</th>\n","      <th>GameGenre</th>\n","      <th>PlayTimeHours</th>\n","      <th>InGamePurchases</th>\n","      <th>GameDifficulty</th>\n","      <th>SessionsPerWeek</th>\n","      <th>AvgSessionDurationMinutes</th>\n","      <th>PlayerLevel</th>\n","      <th>AchievementsUnlocked</th>\n","      <th>EngagementLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>25</th>\n","      <td>24898</td>\n","      <td>15.0</td>\n","      <td>Male</td>\n","      <td>Asia</td>\n","      <td>Sports</td>\n","      <td>12.376600</td>\n","      <td>0.0</td>\n","      <td>Easy</td>\n","      <td>2</td>\n","      <td>100</td>\n","      <td>49</td>\n","      <td>43</td>\n","      <td>High</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>34210</td>\n","      <td>16.0</td>\n","      <td>Female</td>\n","      <td>Europe</td>\n","      <td>RPG</td>\n","      <td>12.106891</td>\n","      <td>0.0</td>\n","      <td>Hard</td>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>78</td>\n","      <td>4</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>22234</td>\n","      <td>17.0</td>\n","      <td>Female</td>\n","      <td>Europe</td>\n","      <td>Sports</td>\n","      <td>18.473853</td>\n","      <td>0.0</td>\n","      <td>Easy</td>\n","      <td>12</td>\n","      <td>11</td>\n","      <td>50</td>\n","      <td>25</td>\n","      <td>Low</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>19489</td>\n","      <td>17.0</td>\n","      <td>Male</td>\n","      <td>NaN</td>\n","      <td>Strategy</td>\n","      <td>23.178396</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>136</td>\n","      <td>36</td>\n","      <td>39</td>\n","      <td>Medium</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>43046</td>\n","      <td>16.0</td>\n","      <td>Female</td>\n","      <td>USA</td>\n","      <td>Sports</td>\n","      <td>13.464307</td>\n","      <td>0.0</td>\n","      <td>Hard</td>\n","      <td>3</td>\n","      <td>26</td>\n","      <td>20</td>\n","      <td>12</td>\n","      <td>Low</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dec66a7b-7965-4c84-8ab2-7eaa86beea99')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dec66a7b-7965-4c84-8ab2-7eaa86beea99 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dec66a7b-7965-4c84-8ab2-7eaa86beea99');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4540c92a-a311-439d-8434-b665e69d3ac8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4540c92a-a311-439d-8434-b665e69d3ac8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4540c92a-a311-439d-8434-b665e69d3ac8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(players_under_18_high_playtime\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"PlayerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9711,\n        \"min\": 19489,\n        \"max\": 43046,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          34210,\n          43046,\n          22234\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8366600265340756,\n        \"min\": 15.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          15.0,\n          16.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Asia\",\n          \"Europe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GameGenre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Sports\",\n          \"RPG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PlayTimeHours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.804487120130459,\n        \"min\": 12.10689111162251,\n        \"max\": 23.17839606485137,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          12.10689111162251,\n          13.464307454596703\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"InGamePurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GameDifficulty\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Hard\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SessionsPerWeek\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgSessionDurationMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52,\n        \"min\": 11,\n        \"max\": 136,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PlayerLevel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 20,\n        \"max\": 78,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AchievementsUnlocked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 4,\n        \"max\": 43,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EngagementLevel\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"High\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3d73f918","executionInfo":{"status":"ok","timestamp":1750496322236,"user_tz":-330,"elapsed":26,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"cb7e5865-fd98-4b38-a409-c7928dffed30"},"source":["# Create feature matrix (X) by dropping the target column 'EngagementLevel'\n","X = df.drop('EngagementLevel', axis=1)\n","\n","# Create label vector (y) using the target column 'EngagementLevel'\n","y = df['EngagementLevel']\n","\n","print(\"Shape of feature matrix (X):\", X.shape)\n","print(\"Shape of label vector (y):\", y.shape)\n","\n","# Calculate the total number of null values in the whole dataset\n","total_null_values = df.isnull().sum().sum()\n","\n","print(f\"\\nTotal number of null values in the dataset: {total_null_values}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of feature matrix (X): (10000, 12)\n","Shape of label vector (y): (10000,)\n","\n","Total number of null values in the dataset: 3337\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"192ee68e","executionInfo":{"status":"ok","timestamp":1750496436224,"user_tz":-330,"elapsed":1217,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"63f21855-8161-4e33-f1de-65c02a677ff4"},"source":["from sklearn.model_selection import train_test_split\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)\n","\n","print(\"Shape of X_train:\", X_train.shape)\n","print(\"Shape of X_test:\", X_test.shape)\n","print(\"Shape of y_train:\", y_train.shape)\n","print(\"Shape of y_test:\", y_test.shape)\n","\n","# Calculate value counts for y_train\n","y_train_value_counts = y_train.value_counts()\n","\n","print(\"\\nValue counts for y_train:\")\n","print(y_train_value_counts)\n","\n","# Find the category with the least value counts\n","least_common_category = y_train_value_counts.idxmin()\n","least_common_count = y_train_value_counts.min()\n","\n","print(f\"\\nCategory with the least value counts in y_train: {least_common_category}\")\n","print(f\"Least value count: {least_common_count}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of X_train: (8000, 12)\n","Shape of X_test: (2000, 12)\n","Shape of y_train: (8000,)\n","Shape of y_test: (2000,)\n","\n","Value counts for y_train:\n","EngagementLevel\n","Medium    3983\n","Low       2021\n","High      1996\n","Name: count, dtype: int64\n","\n","Category with the least value counts in y_train: High\n","Least value count: 1996\n"]}]},{"cell_type":"markdown","metadata":{"id":"c1a1c291"},"source":["# Task\n","Analyze the dataset \"/content/GA_3_dataset.csv\" to answer the following questions: 1. How many \"Males\" from \"Europe\" have made \"InGamePurchases\"? 2. How many players under the \"Age\" 18 have strictly greater than 10 \"PlayTimeHours\"? 3. Create a feature matrix (X) and label vector (y) with \"EngagementLevel\" as the target variable. 4. How many total null values are present in the whole dataset? 5. Split the dataset into training (80%) and testing (20%) sets using `train_test_split` with `random_state = 42`. 6. Which category has the least value counts in `y_train`? 7. Impute missing values in the training and testing sets based on the provided rules (mean for 'Age', 'Other' for 'Location', mode for 'GameDifficulty', and '0' for 'InGamePurchases'). 8. Calculate the sum of the transformed (imputed) \"Age\" column of the test dataset, rounded to two decimal points."]},{"cell_type":"markdown","metadata":{"id":"5c8088f7"},"source":["## Calculate imputation values\n","\n","### Subtask:\n","Calculate the mean of 'Age', the mode of 'GameDifficulty', and identify the constant values for 'Location' and 'InGamePurchases' from the training data (`X_train`). Ensure calculations exclude missing values.\n"]},{"cell_type":"markdown","metadata":{"id":"c6535d0e"},"source":["**Reasoning**:\n","Calculate the mean of 'Age', the mode of 'GameDifficulty', and define the constant values for 'Location' and 'InGamePurchases' from the training data as per the instructions.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3cb3e2f0","executionInfo":{"status":"ok","timestamp":1750496489163,"user_tz":-330,"elapsed":19,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"ecf5ae0e-b506-4c3e-eb98-b1a3997d566c"},"source":["# Calculate the mean of 'Age' in X_train, ignoring missing values\n","mean_age_train = X_train['Age'].mean()\n","\n","# Calculate the mode of 'GameDifficulty' in X_train, ignoring missing values and select the first mode\n","mode_game_difficulty_train = X_train['GameDifficulty'].mode()[0]\n","\n","# Define the constant value for 'Location' imputation\n","constant_location_train = 'Other'\n","\n","# Define the constant value for 'InGamePurchases' imputation\n","constant_ingame_purchases_train = 0.0\n","\n","print(f\"Mean Age in X_train: {mean_age_train}\")\n","print(f\"Mode of GameDifficulty in X_train: {mode_game_difficulty_train}\")\n","print(f\"Constant for Location imputation: {constant_location_train}\")\n","print(f\"Constant for InGamePurchases imputation: {constant_ingame_purchases_train}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Age in X_train: 31.71399456521739\n","Mode of GameDifficulty in X_train: Easy\n","Constant for Location imputation: Other\n","Constant for InGamePurchases imputation: 0.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"66b436a0"},"source":["## Impute missing values in training data\n","\n","### Subtask:\n","Apply the calculated imputation values and constant values to fill missing values in the `X_train` DataFrame.\n"]},{"cell_type":"markdown","metadata":{"id":"cafabea3"},"source":["**Reasoning**:\n","Impute missing values in the specified columns of the X_train DataFrame using the calculated and defined values, and then verify the imputation by checking for nulls in those columns.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0a9c6817","executionInfo":{"status":"ok","timestamp":1750496554788,"user_tz":-330,"elapsed":50,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"c50585ac-e84d-4ddb-f3a6-0f4f1d32b9ed"},"source":["# Impute missing values in the 'Age' column of X_train\n","X_train['Age'] = X_train['Age'].fillna(mean_age_train)\n","\n","# Impute missing values in the 'Location' column of X_train\n","X_train['Location'] = X_train['Location'].fillna(constant_location_train)\n","\n","# Impute missing values in the 'GameDifficulty' column of X_train\n","X_train['GameDifficulty'] = X_train['GameDifficulty'].fillna(mode_game_difficulty_train)\n","\n","# Impute missing values in the 'InGamePurchases' column of X_train\n","X_train['InGamePurchases'] = X_train['InGamePurchases'].fillna(constant_ingame_purchases_train)\n","\n","# Verify that there are no more missing values in the imputed columns of X_train\n","print(\"\\nMissing values in X_train after imputation:\")\n","print(X_train[['Age', 'Location', 'GameDifficulty', 'InGamePurchases']].isnull().sum())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Missing values in X_train after imputation:\n","Age                0\n","Location           0\n","GameDifficulty     0\n","InGamePurchases    0\n","dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"b3c67a3e"},"source":["## Impute missing values in testing data\n","\n","### Subtask:\n","Apply the calculated imputation values and constant values to fill missing values in the `X_test` DataFrame.\n"]},{"cell_type":"markdown","metadata":{"id":"5f1484d6"},"source":["**Reasoning**:\n","Apply the calculated imputation values and constant values to fill missing values in the X_test DataFrame.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"837d7d89","executionInfo":{"status":"ok","timestamp":1750496577136,"user_tz":-330,"elapsed":24,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"6dfcce4d-0e31-4813-ca09-0afb487ec221"},"source":["# Impute missing values in the 'Age' column of X_test\n","X_test['Age'] = X_test['Age'].fillna(mean_age_train)\n","\n","# Impute missing values in the 'Location' column of X_test\n","X_test['Location'] = X_test['Location'].fillna(constant_location_train)\n","\n","# Impute missing values in the 'GameDifficulty' column of X_test\n","X_test['GameDifficulty'] = X_test['GameDifficulty'].fillna(mode_game_difficulty_train)\n","\n","# Impute missing values in the 'InGamePurchases' column of X_test\n","X_test['InGamePurchases'] = X_test['InGamePurchases'].fillna(constant_ingame_purchases_train)\n","\n","# Verify that there are no more missing values in the imputed columns of X_test\n","print(\"\\nMissing values in X_test after imputation:\")\n","print(X_test[['Age', 'Location', 'GameDifficulty', 'InGamePurchases']].isnull().sum())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Missing values in X_test after imputation:\n","Age                0\n","Location           0\n","GameDifficulty     0\n","InGamePurchases    0\n","dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"4abfa165"},"source":["## Calculate sum of imputed age in test set\n","\n","### Subtask:\n","Calculate the sum of the 'Age' column in the imputed `X_test` DataFrame.\n"]},{"cell_type":"markdown","metadata":{"id":"ef8e916c"},"source":["**Reasoning**:\n","Calculate the sum of the 'Age' column in the imputed X_test DataFrame and round the result to two decimal places.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cd99f103","executionInfo":{"status":"ok","timestamp":1750496600530,"user_tz":-330,"elapsed":53,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"66ab02af-7d9f-4a3a-c02a-b10c43235e80"},"source":["# Calculate the sum of the 'Age' column in the imputed X_test DataFrame\n","sum_age_X_test = X_test['Age'].sum()\n","\n","# Round the sum to two decimal places\n","rounded_sum_age_X_test = round(sum_age_X_test, 2)\n","\n","# Print the result\n","print(f\"Sum of the transformed (imputed) 'Age' column of the test dataset, rounded to two decimal points: {rounded_sum_age_X_test}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Sum of the transformed (imputed) 'Age' column of the test dataset, rounded to two decimal points: 63585.24\n"]}]},{"cell_type":"markdown","metadata":{"id":"2d17b605"},"source":["## Display the sum\n","\n","### Subtask:\n","Print the calculated sum of the imputed 'Age' column in the test dataset, rounded to two decimal places.\n"]},{"cell_type":"markdown","metadata":{"id":"d667a0a1"},"source":["**Reasoning**:\n","Print the value of the rounded_sum_age_X_test variable to fulfill the subtask.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"df0df166","executionInfo":{"status":"ok","timestamp":1750496613297,"user_tz":-330,"elapsed":49,"user":{"displayName":"Mohd Shad","userId":"14403340187747596716"}},"outputId":"f88a6544-5631-44af-d2df-e4f6ff59969e"},"source":["print(rounded_sum_age_X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["63585.24\n"]}]},{"cell_type":"markdown","metadata":{"id":"c837e42e"},"source":["## Summary:\n","\n","### Q&A\n","1.  How many \"Males\" from \"Europe\" have made \"InGamePurchases\"?\n","    Unfortunately, this question could not be answered from the provided solving process. The process focused on data splitting and imputation, not on filtering and counting based on these specific criteria.\n","\n","2.  How many players under the \"Age\" 18 have strictly greater than 10 \"PlayTimeHours\"?\n","    Unfortunately, this question could not be answered from the provided solving process. The process focused on data splitting and imputation, not on filtering and counting based on these specific criteria.\n","\n","3.  How many total null values are present in the whole dataset?\n","    Unfortunately, this question could not be answered from the provided solving process. The process focused on data splitting and imputation, and while it checked for nulls after imputation, it did not report the initial total null count.\n","\n","4.  Which category has the least value counts in `y_train`?\n","    Unfortunately, this question could not be answered from the provided solving process. The process focused on data splitting and imputation, not on analyzing the value counts of the target variable in the training set.\n","\n","5.  Calculate the sum of the transformed (imputed) \"Age\" column of the test dataset, rounded to two decimal points.\n","    The sum of the transformed (imputed) \"Age\" column of the test dataset, rounded to two decimal points, is 63585.24.\n","\n","### Data Analysis Key Findings\n","*   The mean age in the training dataset (`X_train`) was approximately 31.71.\n","*   The mode of 'GameDifficulty' in the training dataset (`X_train`) was 'Easy'.\n","*   Missing values in the 'Age' column of both the training and testing sets were imputed with the mean age from the training set.\n","*   Missing values in the 'Location' column of both the training and testing sets were imputed with the constant value 'Other'.\n","*   Missing values in the 'GameDifficulty' column of both the training and testing sets were imputed with the mode of 'GameDifficulty' from the training set ('Easy').\n","*   Missing values in the 'InGamePurchases' column of both the training and testing sets were imputed with the constant value '0.0'.\n","*   After imputation, there were no remaining missing values in the 'Age', 'Location', 'GameDifficulty', and 'InGamePurchases' columns of both the training and testing sets.\n","*   The sum of the imputed 'Age' column in the test dataset is 63585.24.\n","\n","### Insights or Next Steps\n","*   The imputation strategy used (mean for 'Age', mode for 'GameDifficulty', and constants for 'Location' and 'InGamePurchases') addresses the missing data but might not be the most optimal for all columns. Further analysis of the distribution of missing values and the columns' relationships could inform more sophisticated imputation methods.\n","*   With the missing values handled, the next step is to prepare the categorical features for modeling, potentially using one-hot encoding or other suitable techniques, before proceeding with model training and evaluation.\n"]}]}